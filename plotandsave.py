plt.figure()
plt.plot(range(len(train_loss_set)),train_loss_set)
plt.xlabel('Iteration')
plt.ylabel('train_loss')
plt.yscale('linear')
plt.savefig('train_loss_'+str(date)+'.png',dpi=300,bbox_inches='tight')

plt.figure()
plt.plot(range(len(test_loss_set)),test_loss_set)
plt.xlabel('Epoch')
plt.ylabel('test_loss')
plt.yscale('linear')
plt.savefig('test_loss_'+str(date)+'.png',dpi=300,bbox_inches='tight')

plt.figure()
plt.plot(range(len(R2_score_set)),R2_score_set)
plt.xlabel('Iteration')
plt.ylabel('R2_score')
plt.yscale('linear')
plt.savefig('R2_score_test_'+str(date)+'.png',dpi=300,bbox_inches='tight')

plt.figure()
plt.plot(range(len(R2_score_train_set)),R2_score_train_set)
plt.xlabel('Iteration')
plt.ylabel('R2_score')
plt.yscale('linear')
plt.savefig('R2_score_train_'+str(date)+'.png',dpi=300,bbox_inches='tight')

plt.figure()
plt.plot(range(len(RMSE_set)),RMSE_set)
plt.xlabel('Iteration')
plt.ylabel('RMSE')
plt.yscale('linear')
plt.savefig('RMSE_'+str(date)+'.png',dpi=300,bbox_inches='tight')

plt.figure()
plt.plot(train_data_set,train_modeloutput_set,"bo")
plt.xlabel('Train_data')
plt.ylabel('Output_data')
plt.yscale('linear')
plt.savefig('Train_output_'+str(date)+'.png',dpi=300,bbox_inches='tight')

plt.figure()
plt.plot(test_data_set,test_modeloutput_set,"bo")
plt.xlabel('Test_data')
plt.ylabel('Output_data')
plt.yscale('linear')
plt.savefig('Test_output'+str(date)+'.png',dpi=300,bbox_inches='tight')

np.savetxt('R2_score_test.txt', R2_score_set, fmt='%1.8f', delimiter=' ')
np.savetxt('R2_score_train.txt', R2_score_train_set, fmt='%1.8f', delimiter=' ')
np.savetxt('RMSE.txt', RMSE_set, fmt='%1.8f', delimiter=' ')
np.savetxt('test_data.txt', test_data_set, fmt='%1.8f', delimiter=' ')
np.savetxt('test_loss.txt', test_loss_set, fmt='%1.8f', delimiter=' ')
np.savetxt('test_modeloutput.txt', test_modeloutput_set, fmt='%1.8f', delimiter=' ')
np.savetxt('train_data.txt', train_data_set, fmt='%1.8f', delimiter=' ')
np.savetxt('train_loss.txt', train_loss_set, fmt='%1.8f', delimiter=' ')
np.savetxt('train_modeloutput.txt', train_modeloutput_set, fmt='%1.8f', delimiter=' ')
